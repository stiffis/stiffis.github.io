
---
title: Meteor Madness
---

<script>
	import MarkdownCard from '$lib/components/MarkdownCard.svelte';
</script>

<svelte:head>
	<title>Meteor Madness - Caffeine Overflow</title>
	<meta
		name="description"
		content="Prototipo inspirado en la NASA que combina astrofísica, simulaciones y narrativa interactiva."
	/>
</svelte:head>

<div class="max-w-4xl mx-auto px-4 py-12 space-y-10">
	<header class="space-y-4 text-center">
		<p class="inline-flex items-center gap-2 text-blue-800 font-semibold uppercase tracking-wide">
			<img src="/images/nasa-logo.svg" alt="Logo de la NASA" class="h-10" />
			Meteor Madness
		</p>
		<h1 class="text-4xl font-bold text-gray-900">Cazando meteoritos con ayuda de la NASA</h1>
		<p class="text-lg text-gray-600">
			Una experiencia inmersiva donde exploramos trayectorias orbitales, impactos y telemetría en tiempo real.
		</p>
	</header>

<div class="flex justify-center flex-wrap gap-2">
  <img src="https://img.shields.io/badge/React-61DAFB?style=for-the-badge&logo=react&logoColor=black" alt="React">
  <img src="https://img.shields.io/badge/Vite-646CFF?style=for-the-badge&logo=vite&logoColor=white" alt="Vite">
  <img src="https://img.shields.io/badge/Flask-000000?style=for-the-badge&logo=flask&logoColor=white" alt="Flask">
  <img src="https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white" alt="Python">
  <img src="https://img.shields.io/badge/Three.js-000000?style=for-the-badge&logo=three.js&logoColor=white" alt="Three.js">
  <img src="https://img.shields.io/badge/D3.js-F9A826?style=for-the-badge&logo=d3.js&logoColor=white" alt="D3.js">
  <img src="https://img.shields.io/badge/License-MIT-green.svg?style=for-the-badge" alt="License">
</div>


	<MarkdownCard>

# 🌳 Red-Black Tree Implementation

<div align="center">
  <img src="https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black" alt="JavaScript">
  <img src="https://img.shields.io/badge/HTML5-E34F26?style=for-the-badge&logo=html5&logoColor=white" alt="HTML5">
  <img src="https://img.shields.io/badge/CSS3-1572B6?style=for-the-badge&logo=css3&logoColor=white" alt="CSS3">
  <img src="https://img.shields.io/badge/License-GPL%20v3-blue.svg?style=for-the-badge" alt="License">
</div>

## 📋 Descripción

Implementación completa de un **Árbol Rojo-Negro** (Red-Black Tree) con visualización interactiva web. Este proyecto incluye tanto la implementación pura de la estructura de datos como una interfaz visual que permite realizar operaciones de inserción, eliminación y búsqueda de manera interactiva.

## 👥 Integrantes

- Steve Andy Ildefonso Santos **[stiffis](https://github.com/stiffis)**
- Bladimir Alferez Vicente **[bladimirAlfer](https://github.com/bladimirAlfer)**

## 🗂️ Estructura del Proyecto

```
project-red-black-tree/
├── 📁 assets/
│   ├── 📁 css/
│   │   └── common-styles-responsive.css
│   └── 📁 js/
│       ├── iframeResize.js
│       └── instruction-box.js
├── 📁 rbt_operations/
│   ├── 📁 css/
│   │   └── style.css
│   ├── 📁 js/
│   │   ├── RedBlack.js
│   │   └── 📁 lib/
│   │       ├── Algorithm.js
│   │       ├── AnimatedCircle.js
│   │       ├── AnimatedLabel.js
│   │       ├── AnimatedObject.js
│   │       ├── AnimationMain.js
│   │       ├── CustomEvents.js
│   │       ├── HighlightCircle.js
│   │       ├── Line.js
│   │       ├── ObjectManager.js
│   │       └── UndoFunctions.js
│   └── redblack.html
├── 📁 redblack_tree/
│   ├── RedBlackNode.js
│   ├── RedBlackTree.js
│   └── index.js
├── LICENSE
└── README.md
```

## 🏗️ Estructura de Archivos

### 📂 redblack_tree/

#### `RedBlackNode.js`

Contiene la clase `RedBlackNode` que representa un nodo individual del árbol Red-Black.

**Propiedades:**

- `data`: El valor almacenado en el nodo
- `left`: Referencia al hijo izquierdo
- `right`: Referencia al hijo derecho
- `parent`: Referencia al nodo padre
- `color`: Color del nodo ('RED' o 'BLACK')
- `isNullLeaf`: Indica si es una hoja nula

**Métodos principales:**

- `isLeftChild()`: Verifica si el nodo es hijo izquierdo
- `isRightChild()`: Verifica si el nodo es hijo derecho
- `getSibling()`: Obtiene el hermano del nodo
- `getUncle()`: Obtiene el tío del nodo
- `getGrandparent()`: Obtiene el abuelo del nodo
- `isRed()`: Verifica si el nodo es rojo
- `isBlack()`: Verifica si el nodo es negro
- `setColor(color)`: Establece el color del nodo

#### `RedBlackTree.js`

Contiene la clase `RedBlackTree` que implementa la estructura del árbol Red-Black.

**Propiedades:**

- `root`: Nodo raíz del árbol
- `nullLeaf`: Nodo especial que representa las hojas nulas

**Métodos principales:**

- `insert(data)`: Inserta un nuevo valor en el árbol
- `fixInsertion(node)`: Arregla las violaciones de las propiedades del árbol después de insertar
- `rotateLeft(node)`: Realiza una rotación hacia la izquierda
- `rotateRight(node)`: Realiza una rotación hacia la derecha

#### `index.js`

Archivo que exporta ambas clases para facilitar la importación.

### 📂 rbt_operations/

#### `redblack.html`

Interfaz web interactiva que permite visualizar y manipular el árbol Red-Black.

**Características:**

- Visualización gráfica del árbol
- Operaciones de inserción, eliminación y búsqueda
- Controles de animación
- Comentarios explicativos de las operaciones

#### `js/`

Contiene toda la lógica de visualización y animación:

- **RedBlack.js**: Implementación específica para la visualización
- **lib/**: Bibliotecas de animación y manejo de objetos gráficos

## 🔴⚫ Propiedades del Red-Black Tree

1. **Propiedad de Color**: Cada nodo es rojo o negro
2. **Propiedad de Raíz**: La raíz es siempre negra
3. **Propiedad de Hoja**: Todas las hojas (NIL) son negras
4. **Propiedad de Nodo Rojo**: Si un nodo es rojo, ambos hijos deben ser negros
5. **Propiedad de Camino Negro**: Para cada nodo, todos los caminos simples desde el nodo hasta las hojas descendientes contienen el mismo número de nodos negros

## 🚀 Uso

### Implementación básica

```javascript
import { RedBlackTree } from "./redblack_tree/index.js";

const tree = new RedBlackTree();
tree.insert(10);
tree.insert(5);
tree.insert(15);
```

### Visualización interactiva

1. Abrir `rbt_operations/redblack.html` en un navegador web
2. Utilizar los controles para insertar, eliminar o buscar elementos
3. Observar las animaciones que muestran cómo se mantienen las propiedades del árbol

## 🖼️ Demostraciones


### 1. Inserción  
![insert](https://github.com/user-attachments/assets/75354e6a-800d-4612-9730-86f482f70c91)

Al pulsar **Insertar**, el nuevo nodo aparece en rojo y se recolorea/rota según las reglas hasta quedar en negro.

### 2. Eliminación  
![delete](https://github.com/user-attachments/assets/685b112f-634b-46cc-8adf-161eabdeefe3)

Al pulsar **Eliminar**, el nodo objetivo se marca, se elimina y el árbol se reequilibra aplicando rotaciones y recoloreos.

### 3. Búsqueda  
![busqueda](https://github.com/user-attachments/assets/35087500-1864-4d5c-b164-460780cef32f)

Al pulsar **Buscar**, el recorrido se resalta en dorado paso a paso, y el nodo encontrado queda marcado en azul.

### 4. Impresión del árbol 
![print](https://github.com/user-attachments/assets/b14b2c8b-0a4e-4dfc-98cd-bc52efa54f4d)

Al pulsar **Imprimir**, se recorre el árbol en orden y se muestran sus valores impresos en la parte inferior.


## 🛠️ Tecnologías Utilizadas

- **JavaScript ES6+**: Implementación de la estructura de datos
- **HTML5**: Estructura de la interfaz web
- **CSS3**: Estilos y diseño responsive
- **Canvas API**: Renderizado gráfico del árbol
- **jQuery**: Manipulación del DOM y animaciones

## 📦 Instalación

```bash
# Clonar el repositorio
git clone https://github.com/stiffis/project-red-black-tree.git

# Navegar al directorio del proyecto
cd project-red-black-tree

# Abrir la visualización en el navegador
open rbt_operations/redblack.html
```

## 💡 Complejidad

- **Inserción**: O(log n)
- **Eliminación**: O(log n)
- **Búsqueda**: O(log n)
- **Espacio**: O(n)

## 🤝 Contribuciones

Las contribuciones son bienvenidas. Por favor:

1. Fork el proyecto
2. Crea una rama para tu feature (`git checkout -b feature/AmazingFeature`)
3. Commit tus cambios (`git commit -m 'Add some AmazingFeature'`)
4. Push a la rama (`git push origin feature/AmazingFeature`)
5. Abre un Pull Request

## 📄 Licencia

Este proyecto está bajo la Licencia GPL v3. Consulta el archivo [LICENSE](LICENSE) para más detalles.

## 📚 Referencias

- [Introduction to Algorithms - Cormen, Leiserson, Rivest, Stein](https://mitpress.mit.edu/books/introduction-algorithms)
- [Red-Black Trees - Wikipedia](https://en.wikipedia.org/wiki/Red%E2%80%93black_tree)


	</MarkdownCard>
</div>
